---
- name: "add users node exporter and prome"
  become: true
  shell: |       
        useradd --no-create-home --shell /bin/false prome
        useradd --no-create-home --shell /bin/false node_exporter
  ignore_errors: yes
  register: fail

- name: Set flag
  set_fact: flag = failed
  when: "'already exists' in fail.stderr"



- name: Creates directory etc
  become: true
  file:
    path: /etc/prometheus
    state: directory

- name: Creates directory prometheus
  become: true
  file:
    path: /var/lib/prometheus
    state: directory

- name: Unarchive prometheus
  become: true
  unarchive:
    src:  https://github.com/prometheus/prometheus/releases/download/v2.19.0/prometheus-2.19.0.linux-amd64.tar.gz
    dest: /home/ubuntu/
    remote_src: True

- name: copy prometheus files
  become: true
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: yes
  with_items:
    - { src: 'prometheus-2.19.0.linux-amd64/prometheus',dest: '/usr/local/bin/'}
    - { src: 'prometheus-2.19.0.linux-amd64/promtool',dest: '/usr/local/bin/'}
    - { src: 'prometheus-2.19.0.linux-amd64/console_libraries',dest: '/etc/prometheus'}

- name: "change ownership of prometheus and promotool"
  become: true
  shell: |       
          chown prome:prome /usr/local/bin/prometheus
          chown prome:prome /usr/local/bin/promtool

- name: "copying recursively"
  become: true
  shell: |       
      cp -r prometheus-2.19.0.linux-amd64/consoles /etc/prometheus
      cp -r prometheus-2.19.0.linux-amd64/console_libraries /etc/prometheus
      rm -rf prometheus-2.19.0.linux-amd64.tar.gz prometheus-2.19.0.linux-amd64

- name: "change ownership of console libraries"
  become: true
  shell: |       
          chown -R prome:prome /etc/prometheus/consoles
          chown -R prome:prome /etc/prometheus/console_libraries
          chown -R prome:prome /var/lib/prometheus

- name: Copy and (overwrite) prometheus.yml prometheus.service
  become: true
  copy: 
    src: "{{ item.src }}" 
    dest:  "{{ item.dest }}"
  with_items:
    - { src: 'prometheus.yml',dest: '/etc/prometheus/'}
    - { src: 'prometheus.service',dest: '/etc/systemd/system/'}

- name: "start app"
  become: true
  shell: |       
      systemctl daemon-reload
      systemctl start prometheus
      systemctl enable prometheus
      systemctl status prometheus
      #systemctl restart prometheus
  register: startapp 

- name: Display output
  debug:
    var: startapp.stdout_lines 


    